name: devops test

on:
  pull_request:
    branches:
      - dev
    types:
      - closed

jobs:
  deploy:
    name: Deploy Backend to EC2
    runs-on: ubuntu-latest
    # 커밋 메시지에는 기본적으로 병합된 브랜치 이름이 포함됨 Merge branch 'be/로 시작하는 브랜치에서 병합된 경우에 작업 실행
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'be/')

    steps:
      # 1. Github Actions CI 서버 IP 확인
      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      # 2. AWS 보안 그룹 수정
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      # 3. 소스코드 복사 : 깃헙 레포지토리를 전체 복사
      - name: Checkout sources
        uses: actions/checkout@v4

      # 4. application.yml 변경
      - name: Create application.yml
        run: echo "${{ secrets.APPLICATION_YML }}" > ./backend/src/main/resources/application.yml

      # 5. JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 6. Gradle 설치 및 빌드
      # gradlew 파일에 실행 권한 부여하고 빌드
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: |
          cd ./backend
          chmod +x ./gradlew
          ./gradlew clean build -x test

      # 7. SCP를 통해 파일을 EC2 서버로 복사
      - name: copy file via ssh
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          port: ${{ secrets.AWS_EC2_PORT }}
          source: "backend/build/libs/backend-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/backend-0.0.1-SNAPSHOT.jar"

      # 8. 스프링 프로젝트 재시작
      - name: restart spring project
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          port: ${{ secrets.AWS_EC2_PORT }}
          script_stop: true
          script: |
            chmod +x /home/ubuntu/backend-0.0.1-SNAPSHOT.jar
            spring_pid=`ps -ef | grep backend-0.0.1-SNAPSHOT.jar | grep -v grep | awk -F " " '{print $2}'`
            if [ $spring_pid ]; then
                echo "실행중인 백엔드 프로세스 종료하는 중..."
                kill -9 $spring_pid
            else
                echo "실행중인 백엔드 프로세스가 없습니다!"
            fi
            echo "새로운 스프링 프로젝트 실행 중..."
            nohup java -jar /home/ubuntu/spring/build/libs/backend-0.0.1-SNAPSHOT.jar > /dev/null 2>&1 &
